set server_address [lindex $argv 0]
set server_ca [lindex $argv 1]
set endpoint_cert [lindex $argv 2]
set endpoint_key [lindex $argv 3]

spawn openssl s_client -connect "$server_address" \
			-CAfile "$server_ca" \
			-cert "$endpoint_cert" \
			-key "$endpoint_key" \
			-verify_return_error

set timeout 5

# Wait handshake success
expect {
	"CONNECTED(00000003)" {
		# connected OK
	} timeout {
		send_user "Socket connection failed\n"
		return -1
	} eof {
		send_user "Openssl exited unexpectly\n"
		return -1
	}
}

# Wait certificate verification
expect {
	"Verify return code: 0 (ok)" {
		# Certificate check OK
	} timeout {
		send_user "Certificate verification failed\n"
		return -1
	} eof {
		send_user "Openssl exited unexpectly\n"
		return -1
	}
}

# Send EOF (Ctrl+D)
sleep 1
send \x04

# If connection has been successful this far, openssl prints "DONE"
expect {
	"DONE" {
		send_user "success\n"
	} eof {
		send_user "openssl exited, most likely certificate doesn't match cloud.\n"
	}
}

# Get return value
lassign [wait] pid spawnid os_error_flag value

if {$value != 0} {
	send_user "openssl\[$pid\] failed with \"$value\"\n"
}
return $value
